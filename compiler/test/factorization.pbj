...Example usage of spread for prime factorization:
master(map slaves, array args){ ... Runtime argument.
	long bigPrime <- args[0]; 
...array searchStarts;

... get the place for each slave to start
...long iterations <- bigPrime / 3 / |slaves|;
...for(long m <- 0; m < |slaves|; m <- m + 1) { 
...searchStarts[i] <- iterations * m; 
}

... spread the starting points to the slaves
...long result <- spread: factor(@searchStarts, bigPrime, iterations);
...print("Result: " ~ result);
...}

...long factor(array mylist, long prime, long iterations) {
...long start <- mylist[0];
...for(long i <- start; i < iterations + start; i <- i + 1) {
...if(prime % i = 0 ) { ...it is not prime
...i ->
...}
...}
...null -> ...no evidence that it is not prime
...}
